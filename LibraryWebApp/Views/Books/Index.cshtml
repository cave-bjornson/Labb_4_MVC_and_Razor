@using System.Linq.Expressions
@using LibraryWebApp.Localization
@using LibraryWebApp.Permissions
@using LibraryWebApp.Services.Dtos
@using LibraryWebApp.Views.Books
@using LibraryWebApp.Views.Loans
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Button
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Card
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Form
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Grid
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Table
@using Volo.Abp.Identity
@using Volo.Abp.Threading
@using Volo.Abp.Users
@inject IStringLocalizer<LibraryWebAppResource> L
@inject IAuthorizationService AuthorizationService;
@inject ICurrentUser CurrentUser;
@model BookIndexViewModel

@{
    ViewData["Title"] = "Books";
    int idx = 0;
}

<abp-card>
    <abp-card-header>
        <abp-row>
            <abp-column>
                <abp-card-title>Books</abp-card-title>
            </abp-column>
            <abp-column size-md="_6" class="text-end">
                @if (await AuthorizationService.IsGrantedAsync(LibraryPermissions.Books.Create))
                {
                    <abp-button id="NewBookButton" text="New Book" icon="plus" button-type="Primary" data-bs-toggle="modal" data-bs-target="#CreateModal"/>
                }
            </abp-column>
        </abp-row>
    </abp-card-header>
    <abp-card-body>
        <abp-table hoverable-rows="true" striped-rows="true">
            <thead>
            <tr>
                <th scope="Column">#</th>
                <th scope="Column">Name</th>
                <th scope="Column">Type</th>
                <th scope="Column">Publish Date</th>
                <th scope="Column">Action</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Books)
            {
                <tr>
                    @{
                        idx++;
                    }
                    <th scope="Row">@idx</th>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Type)</td>
                    <td>@Html.DisplayFor(modelItem => item.PublishDate)</td>
                    <td>
                        @if (item.OnLoan)
                        {
                            @Html.Display("On Loan")
                        }
                        else
                        {
                            if (!CurrentUser.IsInRole("admin"))
                            {
                                <form asp-controller="Loans" asp-action="MakeLoan">
                                    <input type="hidden" name="customerUserName" value="@CurrentUser.UserName"/>
                                    <input type="hidden" name="bookId" value="@item.BookId"/>
                                    <abp-button button-type="Primary" type="submit">Make Loan</abp-button>
                                </form>
                            }
                        }
                    </td>
                </tr>
            }
            </tbody>
        </abp-table>
    </abp-card-body>
</abp-card>

@if (await AuthorizationService.IsGrantedAsync(LibraryPermissions.Books.Create))
{
    <abp-dynamic-form asp-action="Create" abp-model="@Model.Book">
        <abp-modal centered="true" scrollable="true" size="Large" id="CreateModal">
            <abp-modal-header title="New Book"></abp-modal-header>
            <abp-modal-body>
                <abp-form-content/>
            </abp-modal-body>
            <abp-modal-footer buttons="@AbpModalButtons.Cancel|AbpModalButtons.Save"></abp-modal-footer>
        </abp-modal>
    </abp-dynamic-form>
}